!function(){"use strict";class e{constructor(e,n,t){this.variables=[],this.currentTextureIndex=0;let o=THREE.FloatType;const r=new THREE.Scene,a=new THREE.Camera;a.position.z=1;const i={passThruTexture:{value:null}},s=g("uniform sampler2D passThruTexture;\n\nvoid main() {\n\n vec2 uv = gl_FragCoord.xy / resolution.xy;\n\n  gl_FragColor = texture2D( passThruTexture, uv );\n\n}\n",i),c=new THREE.Mesh(new THREE.PlaneGeometry(2,2),s);function l(t){t.defines.resolution="vec2( "+e.toFixed(1)+", "+n.toFixed(1)+" )"}function g(e,n){n=n||{};const t=new THREE.ShaderMaterial({uniforms:n,vertexShader:"void main() {\n\n gl_Position = vec4( position, 1.0 );\n\n}\n",fragmentShader:e});return l(t),t}r.add(c),this.setDataType=function(e){return o=e,this},this.addVariable=function(e,n,t){const o={name:e,initialValueTexture:t,material:this.createShaderMaterial(n),dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter};return this.variables.push(o),o},this.setVariableDependencies=function(e,n){e.dependencies=n},this.init=function(){if(!1===t.capabilities.isWebGL2&&!1===t.extensions.has("OES_texture_float"))return"No OES_texture_float support for float textures.";if(0===t.capabilities.maxVertexTextures)return"No support for vertex shader textures.";for(let t=0;t<this.variables.length;t++){const o=this.variables[t];o.renderTargets[0]=this.createRenderTarget(e,n,o.wrapS,o.wrapT,o.minFilter,o.magFilter),o.renderTargets[1]=this.createRenderTarget(e,n,o.wrapS,o.wrapT,o.minFilter,o.magFilter),this.renderTexture(o.initialValueTexture,o.renderTargets[0]),this.renderTexture(o.initialValueTexture,o.renderTargets[1]);const r=o.material,a=r.uniforms;if(null!==o.dependencies)for(let e=0;e<o.dependencies.length;e++){const n=o.dependencies[e];if(n.name!==o.name){let e=!1;for(let t=0;t<this.variables.length;t++)if(n.name===this.variables[t].name){e=!0;break}if(!e)return"Variable dependency not found. Variable="+o.name+", dependency="+n.name}a[n.name]={value:null},r.fragmentShader="\nuniform sampler2D "+n.name+";\n"+r.fragmentShader}}return this.currentTextureIndex=0,null},this.compute=function(){const e=this.currentTextureIndex,n=0===this.currentTextureIndex?1:0;for(let t=0,o=this.variables.length;t<o;t++){const o=this.variables[t];if(null!==o.dependencies){const n=o.material.uniforms;for(let t=0,r=o.dependencies.length;t<r;t++){const r=o.dependencies[t];n[r.name].value=r.renderTargets[e].texture}}this.doRenderTarget(o.material,o.renderTargets[n])}this.currentTextureIndex=n},this.getCurrentRenderTarget=function(e){return e.renderTargets[this.currentTextureIndex]},this.getAlternateRenderTarget=function(e){return e.renderTargets[0===this.currentTextureIndex?1:0]},this.addResolutionDefine=l,this.createShaderMaterial=g,this.createRenderTarget=function(t,r,a,i,s,c){t=t||e,r=r||n,a=a||THREE.ClampToEdgeWrapping,i=i||THREE.ClampToEdgeWrapping,s=s||THREE.NearestFilter,c=c||THREE.NearestFilter;return new THREE.WebGLRenderTarget(t,r,{wrapS:a,wrapT:i,minFilter:s,magFilter:c,format:THREE.RGBAFormat,type:o,depthBuffer:!1})},this.createTexture=function(){const t=new Float32Array(e*n*4);return new THREE.DataTexture(t,e,n,THREE.RGBAFormat,THREE.FloatType)},this.renderTexture=function(e,n){i.passThruTexture.value=e,this.doRenderTarget(s,n),i.passThruTexture.value=null},this.doRenderTarget=function(e,n){const o=t.getRenderTarget();c.material=e,t.setRenderTarget(n),t.render(r,a),c.material=s,t.setRenderTarget(o)}}}var n=THREE;let t="\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nfloat cnoise(vec3 P){\nvec3 Pi0 = floor(P);\nvec3 Pi1 = Pi0 + vec3(1.0);\nPi0 = mod(Pi0, 289.0);\nPi1 = mod(Pi1, 289.0);\nvec3 Pf0 = fract(P);\nvec3 Pf1 = Pf0 - vec3(1.0);\nvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\nvec4 iy = vec4(Pi0.yy, Pi1.yy);\nvec4 iz0 = Pi0.zzzz;\nvec4 iz1 = Pi1.zzzz;\nvec4 ixy = permute(permute(ix) + iy);\nvec4 ixy0 = permute(ixy + iz0);\nvec4 ixy1 = permute(ixy + iz1);\nvec4 gx0 = ixy0 / 7.0;\nvec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\ngx0 = fract(gx0);\nvec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\nvec4 sz0 = step(gz0, vec4(0.0));\ngx0 -= sz0 * (step(0.0, gx0) - 0.5);\ngy0 -= sz0 * (step(0.0, gy0) - 0.5);\nvec4 gx1 = ixy1 / 7.0;\nvec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\ngx1 = fract(gx1);\nvec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\nvec4 sz1 = step(gz1, vec4(0.0));\ngx1 -= sz1 * (step(0.0, gx1) - 0.5);\ngy1 -= sz1 * (step(0.0, gy1) - 0.5);\nvec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\nvec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\nvec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\nvec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\nvec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\nvec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\nvec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\nvec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\nvec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\ng000 *= norm0.x;\ng010 *= norm0.y;\ng100 *= norm0.z;\ng110 *= norm0.w;\nvec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\ng001 *= norm1.x;\ng011 *= norm1.y;\ng101 *= norm1.z;\ng111 *= norm1.w;\nfloat n000 = dot(g000, Pf0);\nfloat n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\nfloat n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\nfloat n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\nfloat n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\nfloat n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\nfloat n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\nfloat n111 = dot(g111, Pf1);\nvec3 fade_xyz = fade(Pf0);\nvec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\nvec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\nfloat n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \nreturn 2.2 * n_xyz;\n}";t="\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nfloat cnoise(vec3 P2){\nvec4 P = vec4(P2 * 1.28, 0.0);\nvec4 Pi0 = floor(P);\nvec4 Pi1 = Pi0 + 1.0;\nPi0 = mod(Pi0, 289.0);\nPi1 = mod(Pi1, 289.0);\nvec4 Pf0 = fract(P);\nvec4 Pf1 = Pf0 - 1.0;\nvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\nvec4 iy = vec4(Pi0.yy, Pi1.yy);\nvec4 iz0 = vec4(Pi0.zzzz);\nvec4 iz1 = vec4(Pi1.zzzz);\nvec4 iw0 = vec4(Pi0.wwww);\nvec4 iw1 = vec4(Pi1.wwww);\nvec4 ixy = permute(permute(ix) + iy);\nvec4 ixy0 = permute(ixy + iz0);\nvec4 ixy1 = permute(ixy + iz1);\nvec4 ixy00 = permute(ixy0 + iw0);\nvec4 ixy01 = permute(ixy0 + iw1);\nvec4 ixy10 = permute(ixy1 + iw0);\nvec4 ixy11 = permute(ixy1 + iw1);\nvec4 gx00 = ixy00 / 7.0;\nvec4 gy00 = floor(gx00) / 7.0;\nvec4 gz00 = floor(gy00) / 6.0;\ngx00 = fract(gx00) - 0.5;\ngy00 = fract(gy00) - 0.5;\ngz00 = fract(gz00) - 0.5;\nvec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\nvec4 sw00 = step(gw00, vec4(0.0));\ngx00 -= sw00 * (step(0.0, gx00) - 0.5);\ngy00 -= sw00 * (step(0.0, gy00) - 0.5);\nvec4 gx01 = ixy01 / 7.0;\nvec4 gy01 = floor(gx01) / 7.0;\nvec4 gz01 = floor(gy01) / 6.0;\ngx01 = fract(gx01) - 0.5;\ngy01 = fract(gy01) - 0.5;\ngz01 = fract(gz01) - 0.5;\nvec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\nvec4 sw01 = step(gw01, vec4(0.0));\ngx01 -= sw01 * (step(0.0, gx01) - 0.5);\ngy01 -= sw01 * (step(0.0, gy01) - 0.5);\nvec4 gx10 = ixy10 / 7.0;\nvec4 gy10 = floor(gx10) / 7.0;\nvec4 gz10 = floor(gy10) / 6.0;\ngx10 = fract(gx10) - 0.5;\ngy10 = fract(gy10) - 0.5;\ngz10 = fract(gz10) - 0.5;\nvec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\nvec4 sw10 = step(gw10, vec4(0.0));\ngx10 -= sw10 * (step(0.0, gx10) - 0.5);\ngy10 -= sw10 * (step(0.0, gy10) - 0.5);\nvec4 gx11 = ixy11 / 7.0;\nvec4 gy11 = floor(gx11) / 7.0;\nvec4 gz11 = floor(gy11) / 6.0;\ngx11 = fract(gx11) - 0.5;\ngy11 = fract(gy11) - 0.5;\ngz11 = fract(gz11) - 0.5;\nvec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\nvec4 sw11 = step(gw11, vec4(0.0));\ngx11 -= sw11 * (step(0.0, gx11) - 0.5);\ngy11 -= sw11 * (step(0.0, gy11) - 0.5);\nvec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\nvec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\nvec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\nvec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\nvec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\nvec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\nvec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\nvec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\nvec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\nvec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\nvec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\nvec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\nvec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\nvec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\nvec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\nvec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\nvec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\ng0000 *= norm00.x;\ng0100 *= norm00.y;\ng1000 *= norm00.z;\ng1100 *= norm00.w;\nvec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\ng0001 *= norm01.x;\ng0101 *= norm01.y;\ng1001 *= norm01.z;\ng1101 *= norm01.w;\nvec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\ng0010 *= norm10.x;\ng0110 *= norm10.y;\ng1010 *= norm10.z;\ng1110 *= norm10.w;\nvec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\ng0011 *= norm11.x;\ng0111 *= norm11.y;\ng1011 *= norm11.z;\ng1111 *= norm11.w;\nfloat n0000 = dot(g0000, Pf0);\nfloat n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\nfloat n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\nfloat n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\nfloat n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\nfloat n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\nfloat n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\nfloat n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\nfloat n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\nfloat n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\nfloat n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\nfloat n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\nfloat n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\nfloat n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\nfloat n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\nfloat n1111 = dot(g1111, Pf1);\nvec4 fade_xyzw = fade(Pf0);\nvec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\nvec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\nvec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\nvec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\nfloat n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\nreturn 2.2 * n_xyzw * .7;\n}";let o="const mat2 myt = mat2(.12121212, .13131313, -.13131313, .12121212);\nconst vec2 mys = vec2(1e4, 1e6);\nvec2 rhash(vec2 uv) {\nuv *= myt;\nuv *= mys;\nreturn fract(fract(uv / mys) * uv);\n}\nvec3 hash(vec3 p) {\nreturn fract(sin(vec3(dot(p, vec3(1.0, 57.0, 113.0)),\ndot(p, vec3(57.0, 113.0, 1.0)),\ndot(p, vec3(113.0, 1.0, 57.0)))) *\n43758.5453);\n}\nfloat voronoiNoise(const in vec2 point) {\nvec2 p = floor(point);\nvec2 f = fract(point);\nfloat res = 0.0;\nfor (int j = -1; j <= 1; j++) {\nfor (int i = -1; i <= 1; i++) {\nvec2 b = vec2(i, j);\nvec2 r = vec2(b) - f + rhash(p + b);\nres += 1. / pow(dot(r, r), 8.);\n}\n}\nreturn pow(1. / res, 0.0625);\n}\n";function r(e,n,t){return e<n&&(e=n),e>t&&(e=t),e}function a(e,n,t,o,a,i=!1){let s=o+(a-o)*(e-n)/(t-n);return i&&(s=r(s,o,a)),s}let i=new class{constructor(){this.useA=!1;let e=function(e){let n=parseInt(e.substring(0,8),16),t=parseInt(e.substring(8,16),16),o=parseInt(e.substring(16,24),16),r=parseInt(e.substring(24,32),16);return function(){n|=0,t|=0,o|=0,r|=0;let e=(n+t|0)+r|0;return r=r+1|0,n=t^t>>>9,t=o+(o<<3)|0,o=o<<21|o>>>11,o=o+e|0,(e>>>0)/4294967296}};this.prngA=new e(tokenData.hash.substring(2,34)),this.prngB=new e(tokenData.hash.substring(34,66));for(let e=0;e<1e6;e+=2)this.prngA(),this.prngB()}random_dec(){return this.useA=!this.useA,this.useA?this.prngA():this.prngB()}random_num(e,n){return e+(n-e)*this.random_dec()}random_int(e,n){return Math.floor(this.random_num(e,n+1))}random_bool(e){return this.random_dec()<e}random_choice(e){return e[this.random_int(0,e.length-1)]}},s=[{dB:-.04000000000000015,dR:.51,vS:-.1,sI:.5,name:"coal",colors:["#4f4f4f","#333333","#151619","#090b0f","#020203"],stops:[26020852139652106e-33,.15000000000000002,.31999999999999995,.4900000000000001,1]},{dB:-.02000000000000006,dR:.24,vS:.05,sI:.2,name:"carbon",colors:["#bfbfbf","#a5a5a5","#7f8489","#171b23","#010203"],stops:[26020852139652106e-33,.12,.24,.76,1]},{dB:-.13000000000000003,dR:.45000000000000007,vS:-.2,sI:0,name:"bone",colors:["#FFFFFF","#ebe7e5","#bfbaba","#6d767f","#444b5c"],stops:[1214306433183765e-32,.25999999999999995,.5400000000000001,.9500000000000001,1]},{dB:-.09000000000000001,dR:.4299999999999999,vS:0,sI:.3,name:"gold",colors:["#fff6ea","#e8c098","#8f623f","#6c4035","#000000"],stops:[0,.2600000000000001,.75,.87,1]},{dB:-.16999999999999998,dR:.37999999999999995,vS:.03,sI:0,name:"fire",colors:["#f8a393","#ef6d6d","#db4d41","#a5343e","#460310"],stops:[0,.08,.29000000000000004,.6,1]},{dB:-.07000000000000002,dR:.42000000000000004,vS:-.05,sI:.2,name:"rose",colors:["#ffd2d2","#ebb2c6","#a85562","#853c3c","#62162c"],stops:[0,.24000000000000007,.7899999999999999,.9,1]},{dB:.43,dR:.44999999999999996,vS:-.1,sI:.1,name:"lavender",colors:["#fbf3f1","#fbf1f0","#e2c1ba","#d2a0aa","#c58484"],stops:[3469446951953614e-33,.36000000000000004,.82,.9500000000000001,1]},{dB:.020000000000000066,dR:.29000000000000004,vS:-.2,sI:.4,name:"blush",colors:["#f8e2d0","#fba3a3","#9c405a","#661935","#4c1015"],stops:[0,.26,.7599999999999999,.93,1]},{dB:-.04000000000000007,dR:.37999999999999995,vS:-.1,sI:.3,name:"gill",colors:["#eae4eb","#cfc6c4","#9f9391","#8c7159","#8c6244"],stops:[.3400000000000001,.66,.8899999999999999,.98,1]},{dB:-.11,dR:.36000000000000004,vS:-.05,sI:.1,name:"moss",colors:["#dbffc0","#8ea26e","#627955","#122c1c","#010605"],stops:[0,.25999999999999995,.48,.86,1]},{dB:-.07000000000000006,dR:.39,vS:-.1,sI:.1,name:"leaf",colors:["#c7e2af","#96af9b","#43624d","#1d392f","#091c1c"],stops:[0,.20000000000000004,.5700000000000002,.7300000000000001,1]},{dB:-.03999999999999994,dR:.36000000000000004,vS:-.2,sI:.3,name:"neon",colors:["#badfd3","#87cfb8","#6cc29b","#20695d","#123630"],stops:[0,.23999999999999996,.33,.97,1]},{dB:-.16999999999999993,dR:.31999999999999995,vS:0,sI:.2,name:"shore",colors:["#acc6d8","#6395b2","#305372","#152b3f","#121929"],stops:[1734723475976807e-33,.33,.5800000000000001,.8200000000000001,1]},{dB:-.16999999999999996,dR:.52,vS:0,sI:.2,name:"space",colors:["#b7d2e2","#597282","#385366","#121c2c","#040516"],stops:[1734723475976807e-33,.37,.6000000000000001,.87,1]},{dB:-.07000000000000002,dR:.41000000000000003,vS:-.2,sI:.2,name:"grape",colors:["#9286ac","#4b4e82","#3b3969","#141739","#0b0e1f"],stops:[0,.11000000000000001,.29,.84,1]},{dB:-.03999999999999996,dR:.35,vS:-.1,sI:.2,name:"plum",colors:["#ba95db","#9d88db","#363077","#100c3c","#0d0f1f"],stops:[0,.15999999999999998,.5400000000000001,.79,1]},{dB:.76,dR:.51,vS:-.1,sI:.3,name:"haze",colors:["#c3b2df","#585c95","#242a5c","#000033","#020026"],stops:[0,.36999999999999994,.64,.91,1]},{dB:.09000000000000007,dR:.37999999999999995,vS:0,sI:.3,name:"peach",colors:["#ffd3a4","#f8bc99","#fb8353","#fb5149","#c52b25"],stops:[26020852139652106e-33,.21,.46,.8300000000000001,1]},{dB:-.24,dR:.42999999999999994,vS:0,sI:.3,name:"depth",colors:["#7f95a5","#567d92","#223649","#112236","#02121f"],stops:[0,.32000000000000006,.71,.87,1]},{dB:-.13000000000000003,dR:.29000000000000004,vS:.05,sI:.3,name:"wine",colors:["#f57979","#bf354b","#6f162c","#3f030b","#190008"],stops:[0,.17,.54,.8200000000000001,1]},{dB:-.11000000000000006,dR:.36000000000000004,vS:.05,sI:.3,name:"wood",colors:["#6f6559","#464240","#292827","#161311","#191215"],stops:[26020852139652106e-33,.25,.41,.63,1]},{dB:.12999999999999995,dR:.4899999999999999,vS:.05,sI:.3,name:"honey",colors:["#fffdfa","#fbeccb","#fbda90","#bc8d51","#a75128"],stops:[22551405187698492e-33,.16000000000000003,.51,.87,1]},{dB:.27999999999999997,dR:.3999999999999999,vS:.05,sI:.3,name:"pale",colors:["#fffdfa","#fbeccb","#ffe7b4","#c89859","#d87f42"],stops:[22551405187698492e-33,.12000000000000002,.44999999999999996,.9500000000000001,1]},{dB:.27999999999999997,dR:.3999999999999999,vS:.05,sI:.3,name:"sun",colors:["#fffdfa","#ffe09d","#ffd16f","#eb9543","#cf6a42"],stops:[22551405187698492e-33,.12000000000000002,.44999999999999996,.9500000000000001,1]},{dB:-.12999999999999995,dR:.41000000000000003,vS:-.1,sI:.2,name:"berry",colors:["#a5d8fb","#298ebf","#0063b5","#0e336c","#001a56"],stops:[1734723475976807e-33,.14,.4600000000000001,.8,1]},{dB:-.25999999999999995,dR:.29,vS:.03,sI:0,name:"blood",colors:["#ff2145","#ff6d6d","#d52836","#821526","#16040f"],stops:[0,.22,.49000000000000005,.75,1]}],c=[[0,1],[0,1],[0,1,2],[1,2],[2,3,5],[1,2,8],[2,1],[2,3,8],[2,3],[8,9],[2,25],[4,19,17,19],[3,3,3,22,4],[3,22],[4,19],[3,8],[0,2],[19,18,6],[19,19,6,7],[19,5],[6,6,5],[19,2],[2,19],[2,2,18],[19,19,8],[5,7,8],[6,7,5],[5,8],[6,5,0],[6,2],[9,10,9,10,11],[2,9,10],[2],[18],[18,24],[9,10,11,17],[9,19,11],[10,9,9,10,8],[8,7,6],[9,10],[8,18],[8,22,21,23],[16],[12,13,8,18],[5,7,22,6],[21,22,23],[20,1],[4,2,7],[0,1,8,20]],l=i.random_int(0,c.length-1),g=c[l],d=[];for(let e=0;e<g.length;e++){let n=1;n=i.random_int(1,5);for(let t=0;t<n;t++)d.push(g[e])}g=d;let v=i.random_dec(),f=a(v,0,1,.4,.2);v=a(v,0,1,.9,2);let u=[[-.55,.2],[-.55,.3],[-.55,0],[-.75,0],[-.75,.3],[-.75,-.3]],x=i.random_int(8,13),m=i.random_bool(.8)?1:0,y=12;x>10&&(y-=x-10);let p=100*Math.round(i.random_int(8,y)),h=i.random_int(0,u.length-1),w=u[h],z=w[0],P=w[1],b=1-i.random_dec();b=1-Math.pow(1-b,1);let _=[4,5,6];x<11&&(_=_.slice(0,_.length-1));let S=_[Math.floor(b*_.length)];x<12&&i.random_bool(.2)&&(b=0,S=3);let R,T=a(b,0,1,.3,.6),I=a(b,0,1,.8,1);R=0!=w[1]&&i.random_bool(.6),R=!1;let F=!1;g.length>1&&(F=i.random_bool(.5));let C=8e-4,D=i.random_bool(.5),E=i.random_bool(.25),B=i.random_num(.07,.18);S==_[0]&&(E=!1),b>.8&&(b=1,S=6.5,C=.0015,B*=.5);let H={};H={fadeIn:!0,applyVelocity:!0,applyHoles:!0,noiseStrength:.9};let $={angle:w.toString(),angleIndex:h,border:R,schemeIndex:l,gradientIndices:g,nLines:x,circleDistroAlgo:m,nSteps:p,startRadius:3,hideLines:!0,smallFolds:i.random_bool(.3),zoomLevelRat:b,zoomLevel:S,xRotation:z,yRotation:P,doubleSided:F,swirlSize:i.random_num(.05,.6),swirlStrength:i.random_num(-.2,.2),flipX:D,flipY:E,numCols:g.length,gradientIndices:g,multipleGradientProb:.5*i.random_int(0,2),colorDistributionType:i.random_int(0,2),heightNoiseScale:v,heightNoiseAmp:f,minHoleThreshold:T,maxHoleThreshold:I,allHoles:i.random_bool(.5),bendStrength:C,attrStrength:B};function A(e){let n="",t={};return e.forEach((e=>{let n=s[e].name;t[n]=n})),Object.keys(t).forEach((e=>{""!=n&&(n+=","),n+=e})),n}Math.floor(parseInt(tokenData.tokenId)/1e6);parseInt(tokenData.tokenId);let M=THREE,L=new M.Texture;$.gradientType=2;let V="uv.x = 1.0 - uv.x;",O="uv.y = 1.0 - uv.y;";$.flipX||(V=""),$.flipY||(O="");let k=new Proxy(new URLSearchParams(window.location.search),{get:(e,n)=>e.get(n)}),q=THREE,Y=window,j=/\bHeadlessChrome/.test(navigator.userAgent);new class{_rotVel=new n.Vector3;_posVel;_prevMousePos;_isMouseDown;constructor(){this._posVel=new n.Vector3,this._prevMousePos={x:0,y:0},this._isMouseDown=!1,window.addEventListener("touchstart",this._mouseDownHandler.bind(this)),window.addEventListener("touchend",this._mouseUpHandler.bind(this)),window.addEventListener("touchmove",this._mouseMoveHandler.bind(this)),window.addEventListener("mousedown",this._mouseDownHandler.bind(this)),window.addEventListener("mouseup",this._mouseUpHandler.bind(this)),window.addEventListener("mousemove",this._mouseMoveHandler.bind(this)),window.addEventListener("wheel",this._mouseWheelHandler.bind(this),{passive:!1})}update(e){e=e||.9;this._posVel.multiplyScalar(e),this._rotVel.multiplyScalar(e)}getRotationVelocity(){return this._rotVel}getPositionVelocity(){return this._posVel}_mouseDownHandler(e){this._prevMousePos={x:e.pageX,y:e.pageY},this._isMouseDown=!0}_mouseUpHandler(e){this._isMouseDown=!1}_mouseMoveHandler(e){if(this._isMouseDown){var n={x:e.pageX-this._prevMousePos.x,y:e.pageY-this._prevMousePos.y};this._prevMousePos={x:e.pageX,y:e.pageY},this._rotVel.x=n.y/200,this._rotVel.y=n.x/200}e.preventDefault()}_mouseWheelHandler(e){var n=e.deltaY;this._posVel.z+=n/5e3,e.preventDefault()}},new q.Vector3(i.random_num(-.6,.6),i.random_num(-1,1),0).normalize(),window.matchMedia("only screen and (max-width: 1024px)").matches;let X=Y.devicePixelRatio?Y.devicePixelRatio:1,G=16/9;k.aspectRatio&&(G=k.aspectRatio);let N,U,W,K,J,Q,Z,ee,ne,te,oe,re,ae,ie,se,ce=Y.innerHeight,le=ce/G,ge=H.noiseStrength,de=0,ve=0,fe=0,ue=nn();nn();let xe,me,ye,pe,he,we,ze,Pe,be,_e,Se,Re=0,Te=0,Ie=1,Fe=!1,Ce=[],De=[],Ee=[],Be=[],He=[],$e=$.nLines,Ae=$.nSteps,Me=!1,Le=!1;k.record&&1==k.record&&(Le=!0);let Ve=1e6;k.toFrame&&(Ve=parseInt(k.toFrame));let Oe,ke,qe,Ye=!1,je=new q.Color(0),Xe=je,Ge=je;Ie*=X;let Ne=2;k.scale&&(Ne=parseFloat(k.scale)),le*=Ne,ce*=Ne;let Ue={gradients:[]};$.gradientIndices.forEach((e=>{Ue.gradients.push(s[e])}));let We=[...Ze()];We.sort(((e,n)=>{let t={},o={};e.getHSL(t),n.getHSL(o);let r=Math.abs(.5-t.l)/.5,a=Math.abs(.5-o.l)/.5;return r-=.5*t.s,a-=.5*o.s,r>a?1:r<a?-1:0})),We.forEach((e=>{e.getHSL({})}));let Ke=new q.Color(We[0]),Je={};Ke.getHSL(Je),Ke.setHSL(Je.h,.3*Je.s,.2*Je.l),Oe=Ke.clone();let Qe=Ke.clone();function Ze(){let e=[];for(let n=0;n<Ue.gradients.length;n++)for(let t=0;t<Ue.gradients[n].colors.length;t++)e.push(new THREE.Color(Ue.gradients[n].colors[t]));return e}function en(){let e={};for(let n=0;n<Ue.gradients.length;n++){let t=Ue.gradients[n];for(const[n,o]of Object.entries(t))e.hasOwnProperty(n)||(e[n]=[]),Array.isArray(o)?e[n].push(...o):e[n].push(o)}return e}function nn(){return(new Date).getTime()}function tn(e){Fe||(fe+=e,W.compute()),fe=Re*(1/30);let n=r(fe/5,0,1);n=1-Math.pow(1-n,2),Ge.copy(Xe),Ge.lerp(Oe,n),me.background=Ge,ne.material.uniforms.time={value:fe},ne.material.uniforms.frame={value:Re},J.material.uniforms.time={value:fe},J.material.uniforms.repulsors={value:He},Z.material.uniforms.time={value:fe};let t=en(),o=Ze(),a=Re<=Ae?Re:Ae,i=be.material.uniforms;if(i.noiseStrength={value:ge},i.numSteps={value:a},i.time={value:fe},i.posTex={value:W.getCurrentRenderTarget(ne).texture},i.xDirTex={value:W.getCurrentRenderTarget(ae).texture},i.yDirTex={value:W.getCurrentRenderTarget(se).texture},i.tanTex={value:W.getCurrentRenderTarget(oe).texture},i.colors={value:o},i.stops={value:t.stops},i.dBes={value:t.dB},i.dRs={value:t.dR},i.bgCol={value:Ge},i.numGradients={value:Ue.gradients.length},i.canvasSize={value:new q.Vector2(le*X,ce*X)},be.material.wireframe=Me,j&&Re>=500||!j){let e=xe.getRenderTarget();xe.setRenderTarget(Se),xe.render(me,ye),ze.material.uniforms.map.value=Se.texture,ze.material.uniforms.time.value=de,ze.material.uniforms.width.value=N,ze.material.uniforms.height.value=U,ze.material.uniforms.noiseStrength.value=Ye?.6:.8,xe.setRenderTarget(e),xe.render(he,we)}Fe||Re++}function on(){ce=window.innerHeight;ge=a(ce*Ie,500,2e3,.4,1,!0),ge*=H.noiseStrength,le=ce/G,le*=Ne,ce*=Ne,N=le,U=ce,ye.aspect=le/ce,ye.updateProjectionMatrix(),xe.setSize(le,ce),xe.domElement.style.width=window.innerHeight/G+"px",xe.domElement.style.height=window.innerHeight+"px",ce<900*Ne&&(ce=900*Ne,!j&&X<=1&&(ce*=2)),le=ce/G,we=new q.OrthographicCamera(le/-2,le/2,ce/2,ce/-2,-1e4,1e4),we.updateProjectionMatrix(),Se=new q.WebGLRenderTarget(le*Ie,ce*Ie,{depthBuffer:!0}),ze.scale.x=le,ze.scale.y=ce,qe.scale.x=le,qe.scale.y=ce}Qe.getHSL(Je),Qe.setHSL(Je.h,.3*Je.s,1*Je.l),document.body.style.backgroundColor=Qe.getHexString(),Xe=Ke.clone(),console.log('tokenData.hash = "'+tokenData.hash+'";'),function(){let e=$.zoomLevel;G<1&&(e*=1.2*G);let n=e/G;ye=new q.OrthographicCamera(-n/2,n/2,e/2,-e/2,-50,50),ye.position.z=10.5,ye.position.z,ye.position.z,me=new q.Scene,me.background=Xe,me.add(ye),xe=new q.WebGLRenderer({antialias:!0,sortObjects:!1}),xe.setPixelRatio(X),xe.setSize(le,ce),xe.domElement.style.width=le/Ne+"px",xe.domElement.style.height=ce/Ne+"px",pe=new q.Object3D,pe.rotation.x=$.xRotation,pe.rotation.y=$.yRotation,me.add(pe),xe.domElement.setAttribute("id","scene")}(),function(){const e=new q.DirectionalLight(16777215,1.3),n=new q.DirectionalLight(16777215,.6),t=new q.PointLight(16777215,.5);e.position.set(2,2,-3),n.position.set(8,-12,7),t.position.set(-2,2,-6),me.add(e),me.add(n),me.add(t)}(),function(){let e=[],n=0,t=$.nLines;if(0==$.circleDistroAlgo){for(;n<t;)o(e,0);function o(e,r){r<3&&(e.push([]),n++);let a=.01+r/3,s=5-r;if(e.length<s&&i.random_dec()>a&&n<t){(function(e){let n=0;function t(e){for(let o=0;o<e.length;o++)e[o].length&&t(e[o]),n++}return t(e),n})(e=e[i.random_int(0,e.length-1)])<3&&o(e,r+1)}}}else{e=[];let n=i.random_int(3,$.nLines/2);i.random_bool(.03)&&(n=2);let t=$.nLines-n;for(let o=0;o<n;o++){let r=[],a=i.random_int(0,t<6?t:6);o==n-1&&(a=t),t-=a;let s=r;for(let e=0;e<a;e++){let e=[];s.push(e),s=e}e.push(r)}}let o=new THREE.Vector3,r=0;!function e(n,t,o,a){if(r>0){Ce.push(t),De.push(o),Be.push(a);let e=1.4;$.smallFolds&&a<2&&i.random_bool(.3)&&(e=.6),Ee.push(e)}r++,a++;let s=n.length;if(1==s)o*=.6,e(n[0],t,o,a);else if(s>1){let r=2*Math.PI/s,c=i.random_num(-Math.PI,Math.PI),l=o/(s+1);for(let s=0;s<n.length;s++){let g=t.clone(),d=.55*o;a<2&&(d+=i.random_num(0,.3*o)),g.y+=Math.sin(c+r*s)*d,g.x+=Math.cos(c+r*s)*d,e(n[s],g,l,a)}}}(e,o,$.startRadius,0)}(),function(){W=new e(Ae,$e,xe),ee=W.createTexture(),ne=W.addVariable("texturePosition",`\nuniform float time;\nuniform int frame;\nuniform vec3 startPos[${$.nLines}];\nuniform float startRad[${$.nLines}];\n${t}\n#define PI 3.1415926538\n\nfloat fbm(vec3 x, int numOctaves) {\nfloat v = 0.0;\nfloat a = 0.5;\nvec3 shift = vec3(100);\nfor (int i = 0; i < numOctaves; ++i) {\nv += a * cnoise(x);\nx = x * 2.0 + shift;\na *= 0.5;\n}\nreturn v;\n}\n\nvoid main () {\nvec4 pos;\nvec2 uv = gl_FragCoord.xy / resolution.xy;\nvec4 acc = texture2D(textureAcc, uv);\nif (frame == 0)\n{\nint i = int(gl_FragCoord.y);\nfloat rad = startRad[i];\nfloat ang = uv.x * PI * 2.0;\npos = vec4(cos(ang) * rad, sin(ang) * rad, 0.0, 1.0);\npos.xyz += startPos[i];\nfloat fbmScale = .3;\nint octaves = 1;\nfloat scale = 1.5;\nvec3 p = pos.xyz;\np.x += ${i.random_dec(0,1e3)};\np.y += ${i.random_dec(0,1e3)};\n}\nelse if (frame == 1)\n{\nint nX = ${$.nSteps};\nint nY = ${$.nLines};\nint nTotal = nX * nY;\nvec2 offset;\nfor (int y = 0; y < nY; y++)\n{\nfor (int x = 0; x < nX; x++)\n{\nvec2 uv2 = vec2(float(x) + 0.001, float(y) + 0.001) / resolution.xy;\nvec4 pos2 = texture2D(texturePosition, uv2);\noffset += pos2.xy;\n}\n}\noffset /= float(nTotal);\npos = texture2D(texturePosition, uv);\npos.xy -= offset;\npos.x += ${i.random_dec(-.2,.2).toPrecision(5)};\nvec4 vel = texture2D(textureVel, uv);\nif (${H.applyVelocity}) pos.xyz += vel.xyz;\npos.w = vel.w;\n}\nelse\n{\nvec4 vel = texture2D(textureVel, uv);\npos = texture2D(texturePosition, uv);\nif (${H.applyVelocity}) pos.xyz += vel.xyz;\npos.w = vel.w;\n}\ngl_FragColor = pos;\n}`,ee),ne.material.uniforms.time={value:0},ne.material.uniforms.frame={value:Re},ne.material.uniforms.startPos={value:Ce},ne.material.uniforms.startRad={value:De},K=W.createTexture(),J=W.addVariable("textureAcc",`\n${t}\nuniform float maxAcc;\nuniform float time;\nuniform float foldSize[${$.nLines}];\nuniform int levels[${$.nLines}];\nvoid main () \n{\nvec2 c0 = gl_FragCoord.xy - vec2(1.0, 0.0);\nvec2 c1 = gl_FragCoord.xy;\nvec2 c2 = gl_FragCoord.xy + vec2(1.0, 0.0);\nint level = levels[int(gl_FragCoord.y)];\nif (c1.x < 1.0) c0 = vec2(resolution.x - 1.0, gl_FragCoord.y);\nif (c1.x > resolution.x - 1.0) c2 = vec2(0.0, gl_FragCoord.y);\nvec2 uv0 = c0 / resolution.xy;\nvec2 uv1 = c1 / resolution.xy;\nvec2 uv2 = c2 / resolution.xy;\nvec3 p0 = texture2D(texturePosition, uv0).xyz;\nvec3 p1 = texture2D(texturePosition, uv1).xyz;\nvec3 p2 = texture2D(texturePosition, uv2).xyz;\nfloat type = gl_FragCoord.y;\nvec3 acc = vec3(0.0, 0.0, 0.0);\nfloat segmentLength = .0001;\nfloat internalForceStrength = 1.0;\ninternalForceStrength = foldSize[int(gl_FragCoord.y)];\nvec3 pull1 = p0 - p1;\nvec3 pull2 = p2 - p1;\nvec3 pullToPoint = p0 + ((p2 - p0) * .5);\nvec3 pull3 = p1 - pullToPoint;\npull1 = normalize(pull1) * (length(pull1) - segmentLength);\npull2 = normalize(pull2) * (length(pull2) - segmentLength);\nfloat minDistMin = .4;\nfloat minDistMultiplierMax = .9;\nfloat minDistMultiplier = clamp(time * .5, 0.0, minDistMultiplierMax);\nfloat minDist = minDistMin + ((1.0 + (cnoise(vec3(p1.x * 1.3, p1.y * 1.3, 0.0))) / 2.0) * minDistMultiplier);\nvec2 uv4;\nvec3 p4;\nfloat bendStrength =  ${$.bendStrength.toPrecision(5)};\nfloat globalForceStrength = bendStrength;\nif (time >  0.0)\n{\nacc += pull1 * internalForceStrength;\nacc += pull2 * internalForceStrength;\nfloat swirlSize = cnoise(p1 * .5);\nswirlSize = ${$.swirlSize.toPrecision(5)};\nfloat nStrength = ${$.swirlStrength.toPrecision(5)} * (1.0 - clamp((time - 5.0) / 10.0, 0.0, 1.0));\nvec3 np1 = (p1 * swirlSize) + ${i.random_num(100,300).toPrecision(5)};\nvec3 np2 = (p2 * swirlSize) + ${i.random_num(100,300).toPrecision(5)};\nnp1.z += ${i.random_num(0,1e3).toPrecision(5)};\nnp2.z += ${i.random_num(0,1e3).toPrecision(5)};\nacc.x += cnoise(np1) * nStrength;\nacc.y += cnoise(np2) * nStrength;\nvec3 attrPos = vec3(${i.random_num(-2,2).toPrecision(5)}, ${i.random_num(-2,2).toPrecision(5)}, 0.0);\nvec3 attract = p1 - attrPos;\nattract = normalize(attract) * (1.0 - clamp(length(attract) / 3.5, 0.0, 1.0));\nvec3 repulse = p1 - attrPos;\nrepulse = normalize(repulse) * (1.0 - clamp(length(repulse) / .5, 0.0, 1.0));\nacc -= attract * ${$.attrStrength.toPrecision(5)};\nacc += repulse * ${$.attrStrength.toPrecision(5)};\nfor (int i = 0; i < ${$.nLines}; i++)\n{\nfor (int j = 0; j < ${$.nSteps}; j++)\n{\nuv4 = vec2(float(j) + 0.001, float(i) + 0.001) / resolution.xy;\np4 = texture2D(texturePosition, uv4).xyz;\nif (p1 != p4)\n{\nvec3 dist = p4 - p1;\nvec3 pull3 = normalize(dist) * (length(dist) - minDist);\nvec3 push2 = normalize(dist) * clamp((length(dist) - minDist), 0.0, 10.0);\nacc += pull3 * globalForceStrength;\nacc += push2 * -globalForceStrength;\n}\n}\n}\n}\nacc *= 1.0 - pow(clamp((time - 0.0) / 11.1, 0.0, 1.0), 3.0);\ngl_FragColor = vec4(acc, type);\n}`,K),J.material.uniforms.time={value:0},J.material.uniforms.foldSize={value:Ee},J.material.uniforms.levels={value:Be},Q=W.createTexture(),Z=W.addVariable("textureVel","\nuniform float time;\nvoid main () {\nvec2 uv = gl_FragCoord.xy / resolution.xy;\nvec4 pos = texture2D(texturePosition, uv);\nvec4 acc = texture2D(textureAcc, uv);\nvec4 vel = texture2D(textureVel, uv);\nvel.xyz *= 0.95;\nvel.xyz += acc.xyz;\nvel.xyz *= .05 + (.05 * (1.0 - pow(clamp((time-3.0) / 4.0, 0.0, 1.0), 2.0)));\ngl_FragColor = vec4(vel.xyz, acc.w);\n}",Q),Z.material.uniforms.time={value:0},te=W.createTexture(),oe=W.addVariable("textureTangent","\nvoid main () \n{\nvec3 pos = texture2D(texturePosition, gl_FragCoord.xy / resolution.xy).xyz;\nvec3 prevPos = texture2D(texturePosition, (gl_FragCoord.xy + vec2(1.0, 0.0)) / resolution.xy).xyz;\nvec3 nextPos = texture2D(texturePosition, (gl_FragCoord.xy - vec2(1.0, 0.0)) / resolution.xy).xyz;\nvec3 tangent = normalize(nextPos - pos);\ngl_FragColor = vec4(tangent.xyz, 1.0);\n}",te),ie=W.createTexture(),se=W.addVariable("textureYDir","\nvoid main () \n{\nvec3 tan = texture2D(textureTangent, gl_FragCoord.xy / resolution.xy).xyz;\nvec3 nextTan = texture2D(textureTangent, (gl_FragCoord.xy - vec2(1.0, 0.0)) / resolution.xy).xyz;\nvec3 yDir = tan;\nyDir = normalize(-yDir);\ngl_FragColor = vec4(yDir.xyz, 1.0);\n}",ie),re=W.createTexture(),ae=W.addVariable("textureXDir","\nvoid main () \n{\nvec3 tan = texture2D(textureTangent, gl_FragCoord.xy / resolution.xy).xyz;\nvec3 yDir = texture2D(textureYDir, gl_FragCoord.xy / resolution.xy).xyz;\nvec3 xDir = normalize(cross(tan, yDir));\ngl_FragColor = vec4(xDir.xyz, 1.0);\n}",re),W.setVariableDependencies(J,[ne]),W.setVariableDependencies(Z,[ne,J,Z]),W.setVariableDependencies(ne,[ne,J,Z]),W.setVariableDependencies(oe,[ne]),W.setVariableDependencies(se,[ne,oe]),W.setVariableDependencies(ae,[ne,oe,se]),Se=new q.WebGLRenderTarget(le*Ie,ce*Ie,{depthBuffer:!0});var n=W.init();null!==n&&console.error(n)}(),function(){let e=en(),n=function(e,n){let t=new q.PlaneBufferGeometry(.005,.5,1,n);{t=new THREE.BufferGeometry;let o=[],r=[];for(let t=0;t<n;t++)for(let a=0;a<e;a++)if(o.push(0,0,0),a<e-1)if(t<n-1){let n=t*e+a,o=n+e;r.push(n,n+1,o),r.push(n+1,o+1,o)}else{let n=t*e+a;r.push(n,n+1,a),r.push(n+1,a+1,a)}t.setIndex(r),t.setAttribute("position",new THREE.BufferAttribute(new Float32Array(o),3))}return t}(2,Ae),r=function(e,n,r,s,c){let l=M.UniformsUtils.merge([M.ShaderLib.phong.uniforms,{diffuse:{value:new M.Color(16777215)}},{time:{value:0}},{numSteps:{value:0}},{nSides:{value:r}},{posTex:{type:L}},{xDirTex:{value:L}},{yDirTex:{value:L}},{tanTex:{value:L}},{colors:{value:s}},{stops:{value:c.stops}},{dBes:{value:c.dB}},{vSs:{value:c.dB}},{dRs:{value:c.dR}},{numGradients:{value:1}},{canvasSize:{value:new M.Vector2(100,100)}},{bgCol:{value:new M.Color(16777215)}}]),g=M.ShaderLib.phong.vertexShader,d=M.ShaderLib.phong.fragmentShader;g=g.replace("#include <common>",`\n\nvec3 rotAxis(vec3 v, vec3 axis, float angle)\n{\nreturn (1.0 - cos(angle)) * dot(v, axis) * axis + cos(angle) * v + sin(angle) * cross(axis, v);\n}\n\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nfloat cnoise(vec4 P){\nvec4 Pi0 = floor(P);\nvec4 Pi1 = Pi0 + 1.0;\nPi0 = mod(Pi0, 289.0);\nPi1 = mod(Pi1, 289.0);\nvec4 Pf0 = fract(P);\nvec4 Pf1 = Pf0 - 1.0;\nvec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\nvec4 iy = vec4(Pi0.yy, Pi1.yy);\nvec4 iz0 = vec4(Pi0.zzzz);\nvec4 iz1 = vec4(Pi1.zzzz);\nvec4 iw0 = vec4(Pi0.wwww);\nvec4 iw1 = vec4(Pi1.wwww);\nvec4 ixy = permute(permute(ix) + iy);\nvec4 ixy0 = permute(ixy + iz0);\nvec4 ixy1 = permute(ixy + iz1);\nvec4 ixy00 = permute(ixy0 + iw0);\nvec4 ixy01 = permute(ixy0 + iw1);\nvec4 ixy10 = permute(ixy1 + iw0);\nvec4 ixy11 = permute(ixy1 + iw1);\nvec4 gx00 = ixy00 / 7.0;\nvec4 gy00 = floor(gx00) / 7.0;\nvec4 gz00 = floor(gy00) / 6.0;\ngx00 = fract(gx00) - 0.5;\ngy00 = fract(gy00) - 0.5;\ngz00 = fract(gz00) - 0.5;\nvec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\nvec4 sw00 = step(gw00, vec4(0.0));\ngx00 -= sw00 * (step(0.0, gx00) - 0.5);\ngy00 -= sw00 * (step(0.0, gy00) - 0.5);\nvec4 gx01 = ixy01 / 7.0;\nvec4 gy01 = floor(gx01) / 7.0;\nvec4 gz01 = floor(gy01) / 6.0;\ngx01 = fract(gx01) - 0.5;\ngy01 = fract(gy01) - 0.5;\ngz01 = fract(gz01) - 0.5;\nvec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\nvec4 sw01 = step(gw01, vec4(0.0));\ngx01 -= sw01 * (step(0.0, gx01) - 0.5);\ngy01 -= sw01 * (step(0.0, gy01) - 0.5);\nvec4 gx10 = ixy10 / 7.0;\nvec4 gy10 = floor(gx10) / 7.0;\nvec4 gz10 = floor(gy10) / 6.0;\ngx10 = fract(gx10) - 0.5;\ngy10 = fract(gy10) - 0.5;\ngz10 = fract(gz10) - 0.5;\nvec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\nvec4 sw10 = step(gw10, vec4(0.0));\ngx10 -= sw10 * (step(0.0, gx10) - 0.5);\ngy10 -= sw10 * (step(0.0, gy10) - 0.5);\nvec4 gx11 = ixy11 / 7.0;\nvec4 gy11 = floor(gx11) / 7.0;\nvec4 gz11 = floor(gy11) / 6.0;\ngx11 = fract(gx11) - 0.5;\ngy11 = fract(gy11) - 0.5;\ngz11 = fract(gz11) - 0.5;\nvec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\nvec4 sw11 = step(gw11, vec4(0.0));\ngx11 -= sw11 * (step(0.0, gx11) - 0.5);\ngy11 -= sw11 * (step(0.0, gy11) - 0.5);\nvec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\nvec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\nvec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\nvec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\nvec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\nvec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\nvec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\nvec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\nvec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\nvec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\nvec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\nvec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\nvec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\nvec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\nvec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\nvec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\nvec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\ng0000 *= norm00.x;\ng0100 *= norm00.y;\ng1000 *= norm00.z;\ng1100 *= norm00.w;\nvec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\ng0001 *= norm01.x;\ng0101 *= norm01.y;\ng1001 *= norm01.z;\ng1101 *= norm01.w;\nvec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\ng0010 *= norm10.x;\ng0110 *= norm10.y;\ng1010 *= norm10.z;\ng1110 *= norm10.w;\nvec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\ng0011 *= norm11.x;\ng0111 *= norm11.y;\ng1011 *= norm11.z;\ng1111 *= norm11.w;\nfloat n0000 = dot(g0000, Pf0);\nfloat n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\nfloat n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\nfloat n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\nfloat n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\nfloat n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\nfloat n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\nfloat n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\nfloat n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\nfloat n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\nfloat n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\nfloat n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\nfloat n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\nfloat n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\nfloat n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\nfloat n1111 = dot(g1111, Pf1);\nvec4 fade_xyzw = fade(Pf0);\nvec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\nvec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\nvec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\nvec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\nfloat n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\nreturn 2.2 * n_xyzw;\n}\n${o}\n\nfloat fbm(vec4 x, int numOctaves) {\nfloat v = 0.0;\nfloat a = 0.5;\nvec4 shift = vec4(100);\nfor (int i = 0; i < numOctaves; ++i) {\nv += a * cnoise(x);\nx = x * 2.0 + shift;\na *= 0.5;\n}\nreturn v;\n}\n\n#include <common>\nuniform float time;\nuniform int numSteps;\nuniform int nSides;\nattribute int indexAttr;\nattribute int gradientIndexAttr;\nattribute int gradientIndexAttr2;\nattribute int typeIndex;\nattribute float sIrease;\nattribute float vS;\nattribute float holeThreshold;\nattribute float dB;\nuniform sampler2D posTex;\nuniform sampler2D xDirTex;\nuniform sampler2D yDirTex;\nuniform sampler2D tanTex;\nuniform float mouseRat;\nuniform vec2 canvasSize;\nvarying vec4 vPosition;\nvarying vec4 mvPosition;\nvarying vec3 color;\nvarying float type;\nvarying float indexRat;\nvarying float lengthRad;\nvarying float lengthRadCircular;\nvarying float heightRat;\nvarying float vIndex;\nvarying float gradientIndex;\nvarying float gradientIndex2;\nvarying float animRat;\nvarying float vTypeIndex;\nvarying float vSatIncrease;\nvarying float vHoleThreshold;\nvarying float vDesatBrightness;\nvarying float vValueShift;\n`),g=g.replace("#include <project_vertex>",`\nfloat i = float(indexAttr);\nfloat nX = ${e.toPrecision(5)};\nfloat nY = ${n.toPrecision(5)};\nvTypeIndex = float(typeIndex);\nvSatIncrease = sIrease;\nvHoleThreshold = holeThreshold;\nvDesatBrightness = dB;\nvValueShift = vS;\nfloat y = i + .001;\nint stepIndex = (gl_VertexID / nSides) + 1;\nfloat x = float(stepIndex) + .001;\ngradientIndex = float(gradientIndexAttr);\ngradientIndex2 = float(gradientIndexAttr2);\nindexRat = y / nY;\nfloat yRat = y / nY;\nvec2 uv = vec2(x / nX, yRat);\nvec2 uv2 = vec2(((x + 1.0) / nX), yRat);\nvec4 pos = texture2D(posTex, uv);\nvec4 prevPos = texture2D(posTex, uv2);\nvec4 tan = texture2D(tanTex, uv);\nvec4 xDir = texture2D(xDirTex, uv);\nvec4 yDir = texture2D(yDirTex, uv);\ntype = pos.w;\nvec4 position = vec4( transformed, 1.0 );\nposition = vec4(pos.xyz, 1.0);\nfloat distortFactor = 2.0;\nvec2 distort;\ndistort.x = (1.0 + pow(cnoise(vec4((vec3(position.xy, time * .04) * 0.5) + ${i.random_num(200,400)}, time * .0)), 1.0)) / 2.0;\ndistort.y = (1.0 + pow(cnoise(vec4((vec3(position.xy, time * .04) * 0.5) + ${i.random_num(200,400)}, time * .0)), 1.0)) / 2.0;\nposition.xy *= .7 + (.6 * distort);\nlengthRad = x / nX;\nlengthRadCircular = sin(lengthRad * PI);\nfloat shapePow = 1.0;\nint shapeType = 0;\nvNormal = yDir.xyz;\nfloat offsetMax = .5;\nfloat offset = pow((1.0 + sin(indexRat * 213.3)) / 2.0, 3.0) * offsetMax;\noffset -= pow(1.0 + cnoise(vec4(pos.xy * .8, uv.y, time * .1)) / 2.0, 3.0) * .40;\nanimRat = 1.0 - pow(clamp(.7 - offset - (time * .2), 0.0, 1.0), 3.0);\nfloat noise = cnoise(vec4(position.x * ${$.heightNoiseScale}, position.y * ${$.heightNoiseScale}, time * .03, ${i.random_num(0,1e3).toPrecision(5)}));\nfloat topPos = (1.0 - ${$.heightNoiseAmp}) - .0 + (noise * ${$.heightNoiseAmp});\nfloat bottomPos = -10.0;\nheightRat = 1.0 - (float(gl_VertexID % nSides) / float(nSides));\nif (${H.fadeIn}) topPos -= pow(1.0 - animRat, 2.0) * 3.0;\nposition.z = mix(bottomPos, topPos, heightRat);\nif (typeIndex == 0) position.z -= .35;\nvIndex = y;\nvPosition = position;\nmvPosition = modelViewMatrix * position;\ngl_Position = projectionMatrix * mvPosition;\n`),d=d.replace("#include <common>",`\n#include <common>\nuniform float time;\nuniform vec4 colors[${s.length}];\nuniform float stops[${s.length}];\nuniform float dBes[${c.dB.length}];\nuniform float dRs[${c.dR.length}];\nuniform int numGradients;\nuniform vec2 canvasSize;\nuniform vec3 bgCol;\nuniform float noiseStrength;\nvarying float vIndex;\nvarying vec4 vPosition;\nvarying vec4 mvPosition;\nvarying vec3 color;\nvarying float type;\nvarying float indexRat;\nvarying float lengthRad;\nvarying float lengthRadCircular;\nvarying float animRat;\nvarying float heightRat;\nvarying float gradientIndex;\nvarying float gradientIndex2;\nvarying float vTypeIndex;\nvarying float vSatIncrease;\nvarying float vHoleThreshold;\nvarying float vDesatBrightness;\nvarying float vValueShift;\nfloat roundedBoxSDF(vec2 CenterPosition, vec2 Size, float Radius) \n{\nreturn length(max(abs(CenterPosition)-Size+Radius,0.0))-Radius;\n}\nvec4 gradient(vec4 c1, float s1, vec4 c2, float s2, vec4 c3, float s3, vec4 c4, float s4, float rat)\n{\nvec4 c = mix(c1, c2, smoothstep(s1, s2, rat));\nc = mix(c, c3, smoothstep(s2, s3, rat));\nc = mix(c, c4, smoothstep(s3, s4, rat));\nreturn c;\n}\nvec4 gradient(vec4 c1, float s1, vec4 c2, float s2, vec4 c3, float s3, vec4 c4, float s4, vec4 c5, float s5, float rat)\n{\nvec4 c = mix(c1, c2, smoothstep(s1, s2, rat));\nc = mix(c, c3, smoothstep(s2, s3, rat));\nc = mix(c, c4, smoothstep(s3, s4, rat));\nc = mix(c, c5, smoothstep(s4, s5, rat));\nreturn c;\n}\n${t}\n\nvec3 hsv2rgb(vec3 c)\n{\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n\nvec3 rgb2hsv(vec3 c)\n{\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\nvec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\n${o}\n\nfloat hash12(vec2 p)\n{\nvec3 p3  = fract(vec3(p.xyx) * .1031);\np3 += dot(p3, p3.yzx + 33.33);\nreturn fract((p3.x + p3.y) * p3.z);\n}\n\n`);let v=`\nif (sin(vIndex * ${i.random_dec(1.5,4).toPrecision(5)}) > ${i.random_dec(-1,0).toPrecision(5)} && gl_FrontFacing)\n{\ni1 += 1; i2 += 1;\n}`;$.doubleSided||(v="");let f="\nfloat padRatX = 0.03;\nfloat padRatY = 0.03;\nfloat padX = canvasSize.y * padRatX;\nfloat padY = canvasSize.y * padRatY;\nfloat fadeSize =  canvasSize.y * 0.06 * 3.0;\nif ((gl_FragCoord.x < padX || gl_FragCoord.x > canvasSize.x - padX || gl_FragCoord.y < padY || gl_FragCoord.y > canvasSize.y - padY))\n{\nif (sin(type*PI) > 0.0)\n{\nvec2 size = canvasSize - (vec2(padX, padY * 1.12) * 2.0);\nfloat box = clamp(roundedBoxSDF(gl_FragCoord.xy - (canvasSize * .5), size * .5, 0.0) / fadeSize, 0.0, 1.0);\nbox *= 3.5;\nbox += .3;\nbox -= .0 + (cnoise(vec3((gl_FragCoord.xy / canvasSize) * 8.4, 0.0)) * .4);\nbox = clamp(box, 0.0, 1.0);\nif (n2 < (1.0 - pow(1.0 - box, 4.0)))\n{\ndiscard;\nreturn;\n}\nelse\n{\nfloat b = (gl_FragColor.r + gl_FragColor.b + gl_FragColor.g ) / 3.0;\ngl_FragColor *= 0.9;\ngl_FragColor += (1.0 - b) * .1;\n}\n}\nelse\n{\n}\n}\n";return $.border||(f=""),d=d.replace("#include <fog_fragment>",`\ngl_FragColor.a = 1.0;\nfloat n2 = hash12(gl_FragCoord.xy / canvasSize * 1230.3);\nfloat zoomOffset = 1.0 - ${$.zoomLevelRat.toPrecision(5)};\nzoomOffset = pow(zoomOffset, 2.0);\nzoomOffset *= .5;\nfloat zOffset = ${(3*(Math.abs($.xRotation)-.55)).toPrecision(5)} + zoomOffset;\nfloat divider = 3.0 - zOffset;\nfloat z = .35 + vPosition.z - (zOffset * .35);\nif (z < 0.0) divider = 20.0;\nfloat b = pow(clamp(z / divider, -1.0, 1.0), 2.0);\nb = clamp(b, 0.0, 1.0) * 4.0;\ngl_FragColor = gl_FragColor * b;\nfloat h = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\nif (round(vTypeIndex) == 2.0 && vPosition.z > -1.5)\n{\nfloat ss = 1.5;\nfloat xs = ${a($.nSteps,700,1300,2.2,4,!1).toPrecision(5)};\nfloat cut = cnoise(vec3(lengthRadCircular * ss * xs, (vPosition.z + 123.3) * 1.0 * ss, (indexRat * 12.3) + (time * .01)));\nfloat hr = clamp((heightRat - .95), 0.0, 1.0) / .05;\nhr = clamp(hr, 0.0, 1.0);\nfloat cutThreshold = vHoleThreshold;\nfloat cutTimeOffset = .1;\nfloat cutRat = 1.0 - pow(1.0 - clamp(-cutTimeOffset + (time * 0.1), 0.0, 1.0), 3.0);\ncutRat = 1.0 - (cutRat * cutThreshold);\ncut *= clamp((z + 1.5) / 3.0, 0.0, 1.0) * 1.4;\nif (cut > cutRat)\n{\ndiscard;\nreturn;\n}\n}\n${f}\nfloat bri = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\nfloat n = hash12((gl_FragCoord.xy / canvasSize ) * 1000.0);\ngl_FragColor = gl_FragColor * .95 + vec4(n, n, n, 1.0) * .08 * (1.0 - bri) * noiseStrength;\ngl_FragColor += vec4(n, n, n, 1.0) * ((.013 + (bri * .12))) * noiseStrength * 2.0;\ngl_FragColor.rgb += clamp(1.0 - noiseStrength, 0.0, 1.0) * .05;\ngl_FragColor = clamp(gl_FragColor, vec4(0.0), vec4(1.0));\nbri = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\nint i1 = int(floor(gradientIndex + 0.0001));\nint i2 = int(floor(gradientIndex2 + 0.0001));\n${v}\nif (i1 > numGradients-1) i1 = 0;\nif (i2 > numGradients-1) i2 = 0;\nint ic1 = i1 * 5;\nvec4 c1 = colors[ic1];\nvec4 c2 = colors[ic1+1];\nvec4 c3 = colors[ic1+2];\nvec4 c4 = colors[ic1+3];\nvec4 c5 = colors[ic1+4];\nfloat s1 = stops[ic1];\nfloat s2 = stops[ic1+1];\nfloat s3 = stops[ic1+2];\nfloat s4 = stops[ic1+3];\nfloat s5 = stops[ic1+4];\nint ic2 = i2 * 5;\nvec4 c6 = colors[ic2];\nvec4 c7 = colors[ic2+1];\nvec4 c8 = colors[ic2+2];\nvec4 c9 = colors[ic2+3];\nvec4 c10 = colors[ic2+4];\nfloat s6 = stops[ic2];\nfloat s7 = stops[ic2+1];\nfloat s8 = stops[ic2+2];\nfloat s9 = stops[ic2+3];\nfloat s10 = stops[ic2+4];\nvec4 bw = gl_FragColor;\nbw.rgb += vec3(vValueShift);\nvec4 grad1 = gradient(c1, s1, c2, s2, c3, s3, c4, s4, c5, s5, 1.0 - bri);\nvec4 grad2 = gradient(c6, s6, c7, s7, c8, s8, c9, s9, c10, s10, 1.0 - bri);\nfloat dB1 = dBes[i1];\nfloat dB2 = dBes[i2];\nfloat sinScale = ${i.random_num(2,3).toPrecision(5)};\nsinScale = 2.0;\nfloat rat = (1.0 + sin(((lengthRadCircular * 3.14 * sinScale) + ((time * .2) + (vIndex))) + ${i.random_num(0,200).toPrecision(5)})) / 2.0;\ngl_FragColor = mix(grad1, grad2, rat);\nfloat satRat = .5 + (clamp(sin(lengthRadCircular * 8.0), 0.0, 1.0) * .5);\nsatRat *= vSatIncrease;\nfloat dR1 = dRs[i1];\nfloat dR2 = dRs[i2];\nfloat dR = pow((1.0 + cnoise(((vec3(vPosition.xy * 1.3, vPosition.y * .5)) + vec3(${i.random_num(10.2,345.3).toPrecision(5)})) * .5)) / 2.0, 2.0) * 3.0;\ndR = clamp(dR, 0.0, 1.0);\ndR *= 1.0 - mix(dR1, dR2, rat);\nvec2 satPos = gl_FragCoord.xy;\nvec2 satPosC = vec2((canvasSize.x * .5), (canvasSize.y * .5));\nsatPosC.x += ${i.random_num(-.3,.3).toPrecision(5)} * canvasSize.x;\nsatPosC.y += ${i.random_num(-.3,.3).toPrecision(5)} * canvasSize.y;\nsatPos.x += sin(satPos.x * 0.002) * canvasSize.x * .1;\nsatPos.y += sin(satPos.y * 0.0021) * canvasSize.x * .1;\nfloat satRat2 = 1.0 - (length(satPos - satPosC) / (canvasSize.x * .6));\nsatRat2 = pow(clamp(satRat2, 0.0, 1.0), 2.0);\ndR -= (satRat2 * dR) * 1.0;\ndR = clamp(dR, 0.0, 1.0);\nfloat desatB = mix(dB1, dB2, rat);\ngl_FragColor = mix(gl_FragColor, bw + desatB, dR);\nfloat sIndex = ${i.random_int(0,2).toPrecision(5)};\nif (vIndex >= sIndex && vIndex <= sIndex + (${i.random_int(1,1).toPrecision(5)}))\n{\nvec4 c = mix(colors[ic1+1], colors[ic1+3], clamp(vPosition.z, 0.0, 1.0));\ngl_FragColor = mix(c, c + (vec4(.12, .12, .12, 0.0) * noiseStrength), n);\n}\nvec3 hsv = rgb2hsv(gl_FragColor.rgb);\nvec3 saturated = hsv;\nhsv.r += -.02 + ((1.0 + sin(type * .1)) / 2.0 * .04);\ngl_FragColor.rgb = hsv2rgb(hsv);\nsaturated.g = clamp((saturated.g + .1), 0.0, .8);\nif (z < 0.0) gl_FragColor.rgb *= 1.0 - clamp(abs(clamp(z + 1.5, -1000.0, 0.0)) / 2.5, 0.0, 1.0);\nfloat fadeFactor = clamp(z - 1.0 + (time * (animRat*3.0)), 0.0, 1.0);\ngl_FragColor.rgb = mix(bgCol, gl_FragColor.rgb, fadeFactor);\n#include <fog_fragment>\n`),new M.ShaderMaterial({uniforms:l,vertexShader:g,side:M.DoubleSide,wireframe:!1,fragmentShader:d,lights:!0,fog:!0,name:"custom-material",depthWrite:!0})}(Ae,$e,2,Ze(),e);be=new q.InstancedMesh(n,r,$e);let s=[],c=[],l=[],g=[],d=[],v=[],f=[],u=[],x=i.random_int(0,$e-1),m=0;for(let e=0;e<$e;e++){s.push(e);let n=Be[e],t=n-1,o=0;1==$.colorDistributionType&&(t=i.random_int(0,Ue.gradients.length)),t>Ue.gradients.length-1&&(t=Ue.gradients.length-1),e==x&&(o=Ue.gradients[t].sI);let r=t;if(i.random_bool(.8)&&Ue.gradients.length>1)for(r=i.random_int(0,Ue.gradients.length-1);r==t;)r=i.random_int(0,Ue.gradients.length-1);let a=0,y=2.99;n>3&&(y=2.99),a=1==n||2==n?Math.floor(i.random_num(2,y)):Math.floor(i.random_num(1,y)),$.allHoles&&(a=2),n>1&&n<4&&i.random_dec()>.8&&(a=0),2==a&&($.zoomLevel<=4&&m>=5?a=1:m++);let p=Ue.gradients[t].dB,h=i.random_num($.minHoleThreshold,$.maxHoleThreshold),w=(1+Math.sin(20*e))/2;w*=Ue.gradients[t].vS,u.push(p),g.push(a),c.push(t),l.push(r),d.push(o),v.push(h),f.push(w)}be.geometry.setAttribute("indexAttr",new THREE.InstancedBufferAttribute(new Int32Array(s),1,!1)),be.geometry.setAttribute("gradientIndexAttr",new THREE.InstancedBufferAttribute(new Int32Array(c),1,!1)),be.geometry.setAttribute("gradientIndexAttr2",new THREE.InstancedBufferAttribute(new Int32Array(l),1,!1)),be.geometry.setAttribute("typeIndex",new THREE.InstancedBufferAttribute(new Int32Array(g),1,!1)),be.geometry.setAttribute("sIrease",new THREE.InstancedBufferAttribute(new Float32Array(d),1,!1)),be.geometry.setAttribute("vS",new THREE.InstancedBufferAttribute(new Float32Array(f),1,!1)),be.geometry.setAttribute("holeThreshold",new THREE.InstancedBufferAttribute(new Float32Array(v),1,!1)),be.geometry.setAttribute("dB",new THREE.InstancedBufferAttribute(new Float32Array(u),1,!1)),pe.add(be)}(),function(){var e=q.ShaderLib.basic.vertexShader,n=function(e){return`\nuniform sampler2D map;\nuniform sampler2D debugMap;\nuniform float time;\nuniform float width;\nuniform float height;\nuniform float noiseStrength;\n${t}\n${o}\nfloat rand(vec2 co){\nreturn fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n}\nfloat sSin(float x)\n{\nreturn (1.0 + sin(x)) / 2.0;\n}\nfloat hash12(vec2 p)\n{\nvec3 p3  = fract(vec3(p.xyx) * .1031);\np3 += dot(p3, p3.yzx + 33.33);\nreturn fract((p3.x + p3.y) * p3.z);\n}\nvoid main ()\n{\nfloat pixR = ${e.toPrecision(6)};\nvec2 fc = gl_FragCoord.xy;\nvec2 uv = fc / vec2(width * pixR, height * pixR);\nvec2 uv2 = fc / vec2(width * pixR, height * pixR);\n${V}\n${O}\nvec4 c = texture2D( map, uv);\nfloat n = hash12(gl_FragCoord.xy);\ngl_FragColor = c;\nfloat bri = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\nfloat g = (pow(uv2.y, 2.5)) * 0.12;\ngl_FragColor += (g * .5) + (g * n * .5);\n}`}(X),r=q.UniformsUtils.merge([q.ShaderLib.basic.uniforms,{time:{value:0}},{width:{value:le}},{height:{value:ce}},{noiseStrength:{value:1}}]);Pe=new q.ShaderMaterial({uniforms:r,vertexShader:e,fragmentShader:n,name:"filter-material"}),he=new q.Scene,he.background=new q.Color(0,0,0),we=new q.OrthographicCamera(le/-2,le/2,ce/2,ce/-2,-10,10),we.position.z=1,ze=new q.Mesh(new q.PlaneBufferGeometry(1,1),Pe),ze.scale.x=le,ze.scale.y=ce,he.add(ze),ke=new q.Scene,ke.background=new q.Color(0,0,0),qe=new q.Object3D;let a=1/3,i=[];i.push(W.getCurrentRenderTarget(Z).texture),i.push(W.getCurrentRenderTarget(J).texture),i.push(W.getCurrentRenderTarget(ne).texture),i.push(W.getCurrentRenderTarget(oe).texture),i.push(W.getCurrentRenderTarget(ae).texture),i.push(W.getCurrentRenderTarget(se).texture);let s=0;for(let e=0;e<2;e++)for(let n=0;n<3;n++){let t=new q.Mesh(new q.PlaneBufferGeometry(a,.5),new q.MeshBasicMaterial);0==s?t.material.color=new q.Color(15,15,15,0):1==s&&(t.material.color=new q.Color(5,5,5,0)),t.position.x=-.5*(1-a)+a*n,t.position.y=.25-.5*e,t.material.map=i[s],t.material.map.offset=new q.Vector2(1/Ae*2,0),qe.add(t),s++}qe.position.x=-.5,qe.position.y=.5,qe.scale.x=le,qe.scale.y=ce,ke.add(qe)}(),function e(){var n=nn();ve+=(n-ue)/1e3;let t=1/30;de+=t,ue=n;let o=Math.round(_e/60);(Le||o<1)&&(o=1);if(Te>=30)Te%o==0&&tn(t),Ye||Le&&Re-2<=Ve?xe.domElement.toBlob((function(e){Ye=!1,function(e,n){var t=document.createElement("a");document.body.appendChild(t),t.style="display: none";let o=window.URL.createObjectURL(e);t.href=o,t.download=n,t.click(),window.URL.revokeObjectURL(o),t.remove()}(e,tokenData.hash+"-"+(Re-2).toString()+".png"),r()})):r(),31==Te&&document.body.appendChild(xe.domElement);else if(29==Te){_e=1/(ve/30),de=0,r()}else r();function r(){requestAnimationFrame(e),Te++}}(),tn(0),on(),window.addEventListener("resize",(e=>{on()})),document.addEventListener("keydown",(e=>{"Space"==e.code?Fe=!Fe:"KeyS"==e.code?Ye=!0:"KeyW"==e.code&&(Me=!Me)}));let rn=function(){let e=A($.gradientIndices),n=[];c.forEach((e=>{n.push(A(e))})),n=[...new Set(n)],void 0!==window&&(window.schemeNames=n);let t="";switch($.zoomLevel){case 3:t="lowest";break;case 4:t="low";break;case 5:t="medium";break;case 6:t="high";break;case 6.5:t="ultra high"}let o=Math.abs($.swirlStrength),r="low";return o>.15?r="high":o>.05&&(r="medium"),{fidelity:t,fluidity:r,"color scheme":e,angle:$.angleIndex,direction:$.flipY?"downwards":"upwards",frame:$.border,"double sided":$.doubleSided}}();console.log("Features ------");for(const[e,n]of Object.entries(rn))console.log(`${e}: ${n}`)}();